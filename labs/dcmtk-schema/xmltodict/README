Experiments to convert result of dsr2xml into JSON.

Approach:
 - use xmltodict; problem is it groups entries of the same kind into
 the same key of the dict (e.g., if container has 'code' and 'num' intermixed,
 the output will have those grouped under 'code' and 'num', and ordering will be
 lost)
 - a branch in a fork here https://github.com/lindsay-stevens/xmltodict/tree/ordered-children-short-tags
 addresses this by adding extra attribute specifying order of individual items
 - wanted to see how compatible result would be with that of a standard JS conversion tool

Conclusion: 
 - transformation generated by this custom tool is different from what xml2js (what seems to
 be most popular XML to JSON transformation package in JS)
 - probably, the effort of using DCMTK for transformation into XML first and then into some flavor
 of JSON representation, and harmonizing those, will be higher than the effort to make new code
 to parse and build content tree directly from DICOM (in pydicom and dcmjs)
 - look into the reading capabilities of the SR PR for pydicom
 - looked into JSONPath for interrogating the content: https://goessner.net/articles/JsonPath/
 - implementation of JSONPath: https://github.com/kennknowles/python-jsonpath-rw
 - experimented with the online expression tester: https://jsonpath.curiousconcept.com/:
   - this expression works: $.report.document.content.container.container
   - this gives blank result - why? $.report.document.content.container.container[?(@.meaning=="Patient Characteristics")]
